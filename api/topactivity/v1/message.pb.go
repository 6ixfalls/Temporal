// The MIT License
//
// Copyright (c) 2020 Temporal Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// Code generated by protoc-gen-go. DO NOT EDIT.
// plugins:
// 	protoc-gen-go
// 	protoc
// source: temporal/server/api/topactivity/v1/message.proto

package topactivity

import (
	reflect "reflect"
	sync "sync"

	v1 "go.temporal.io/api/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityType    *v1.ActivityType       `protobuf:"bytes,1,opt,name=activity_type,json=activityType,proto3" json:"activity_type,omitempty"`
	TaskQueue       string                 `protobuf:"bytes,2,opt,name=task_queue,json=taskQueue,proto3" json:"task_queue,omitempty"`
	Attempt         int32                  `protobuf:"varint,3,opt,name=attempt,proto3" json:"attempt,omitempty"`
	StartedIdentity string                 `protobuf:"bytes,4,opt,name=started_identity,json=startedIdentity,proto3" json:"started_identity,omitempty"`
	RequestId       string                 `protobuf:"bytes,5,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	AsmId           string                 `protobuf:"bytes,6,opt,name=asm_id,json=asmId,proto3" json:"asm_id,omitempty"`
	RunId           string                 `protobuf:"bytes,7,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	StartedTime     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=started_time,json=startedTime,proto3" json:"started_time,omitempty"`
	ScheduledTime   *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=scheduled_time,json=scheduledTime,proto3" json:"scheduled_time,omitempty"`
	ClosedTime      *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=closed_time,json=closedTime,proto3" json:"closed_time,omitempty"`
	State           string                 `protobuf:"bytes,11,opt,name=state,proto3" json:"state,omitempty"` // "running", "closed"
	// (-- api-linter: core::0140::prepositions=disabled
	//
	//	aip.dev/not-precedent: "to" is used to indicate interval. --)
	StartToCloseTimeout *durationpb.Duration `protobuf:"bytes,12,opt,name=start_to_close_timeout,json=startToCloseTimeout,proto3" json:"start_to_close_timeout,omitempty"`
	CreatedEventToken   []byte               `protobuf:"bytes,13,opt,name=created_event_token,json=createdEventToken,proto3" json:"created_event_token,omitempty"`
}

func (x *State) Reset() {
	*x = State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_temporal_server_api_topactivity_v1_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*State) ProtoMessage() {}

func (x *State) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_topactivity_v1_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use State.ProtoReflect.Descriptor instead.
func (*State) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_topactivity_v1_message_proto_rawDescGZIP(), []int{0}
}

func (x *State) GetActivityType() *v1.ActivityType {
	if x != nil {
		return x.ActivityType
	}
	return nil
}

func (x *State) GetTaskQueue() string {
	if x != nil {
		return x.TaskQueue
	}
	return ""
}

func (x *State) GetAttempt() int32 {
	if x != nil {
		return x.Attempt
	}
	return 0
}

func (x *State) GetStartedIdentity() string {
	if x != nil {
		return x.StartedIdentity
	}
	return ""
}

func (x *State) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *State) GetAsmId() string {
	if x != nil {
		return x.AsmId
	}
	return ""
}

func (x *State) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *State) GetStartedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedTime
	}
	return nil
}

func (x *State) GetScheduledTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledTime
	}
	return nil
}

func (x *State) GetClosedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ClosedTime
	}
	return nil
}

func (x *State) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *State) GetStartToCloseTimeout() *durationpb.Duration {
	if x != nil {
		return x.StartToCloseTimeout
	}
	return nil
}

func (x *State) GetCreatedEventToken() []byte {
	if x != nil {
		return x.CreatedEventToken
	}
	return nil
}

type TopActivityTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Attributes:
	//
	//	*TopActivityTask_TopActivityTimeoutTaskAttributes
	//	*TopActivityTask_TopActivityRetryTaskAttributes
	Attributes isTopActivityTask_Attributes `protobuf_oneof:"attributes"`
}

func (x *TopActivityTask) Reset() {
	*x = TopActivityTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_temporal_server_api_topactivity_v1_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopActivityTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopActivityTask) ProtoMessage() {}

func (x *TopActivityTask) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_topactivity_v1_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopActivityTask.ProtoReflect.Descriptor instead.
func (*TopActivityTask) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_topactivity_v1_message_proto_rawDescGZIP(), []int{1}
}

func (m *TopActivityTask) GetAttributes() isTopActivityTask_Attributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (x *TopActivityTask) GetTopActivityTimeoutTaskAttributes() *TopActivityTimeoutTaskAttributes {
	if x, ok := x.GetAttributes().(*TopActivityTask_TopActivityTimeoutTaskAttributes); ok {
		return x.TopActivityTimeoutTaskAttributes
	}
	return nil
}

func (x *TopActivityTask) GetTopActivityRetryTaskAttributes() *TopActivityRetryTaskAttributes {
	if x, ok := x.GetAttributes().(*TopActivityTask_TopActivityRetryTaskAttributes); ok {
		return x.TopActivityRetryTaskAttributes
	}
	return nil
}

type isTopActivityTask_Attributes interface {
	isTopActivityTask_Attributes()
}

type TopActivityTask_TopActivityTimeoutTaskAttributes struct {
	TopActivityTimeoutTaskAttributes *TopActivityTimeoutTaskAttributes `protobuf:"bytes,1,opt,name=top_activity_timeout_task_attributes,json=topActivityTimeoutTaskAttributes,proto3,oneof"`
}

type TopActivityTask_TopActivityRetryTaskAttributes struct {
	TopActivityRetryTaskAttributes *TopActivityRetryTaskAttributes `protobuf:"bytes,2,opt,name=top_activity_retry_task_attributes,json=topActivityRetryTaskAttributes,proto3,oneof"`
}

func (*TopActivityTask_TopActivityTimeoutTaskAttributes) isTopActivityTask_Attributes() {}

func (*TopActivityTask_TopActivityRetryTaskAttributes) isTopActivityTask_Attributes() {}

type TopActivityTimeoutTaskAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attempt int32 `protobuf:"varint,1,opt,name=attempt,proto3" json:"attempt,omitempty"`
}

func (x *TopActivityTimeoutTaskAttributes) Reset() {
	*x = TopActivityTimeoutTaskAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_temporal_server_api_topactivity_v1_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopActivityTimeoutTaskAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopActivityTimeoutTaskAttributes) ProtoMessage() {}

func (x *TopActivityTimeoutTaskAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_topactivity_v1_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopActivityTimeoutTaskAttributes.ProtoReflect.Descriptor instead.
func (*TopActivityTimeoutTaskAttributes) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_topactivity_v1_message_proto_rawDescGZIP(), []int{2}
}

func (x *TopActivityTimeoutTaskAttributes) GetAttempt() int32 {
	if x != nil {
		return x.Attempt
	}
	return 0
}

type TopActivityRetryTaskAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attempt int32 `protobuf:"varint,1,opt,name=attempt,proto3" json:"attempt,omitempty"`
}

func (x *TopActivityRetryTaskAttributes) Reset() {
	*x = TopActivityRetryTaskAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_temporal_server_api_topactivity_v1_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopActivityRetryTaskAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopActivityRetryTaskAttributes) ProtoMessage() {}

func (x *TopActivityRetryTaskAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_topactivity_v1_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopActivityRetryTaskAttributes.ProtoReflect.Descriptor instead.
func (*TopActivityRetryTaskAttributes) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_topactivity_v1_message_proto_rawDescGZIP(), []int{3}
}

func (x *TopActivityRetryTaskAttributes) GetAttempt() int32 {
	if x != nil {
		return x.Attempt
	}
	return 0
}

var File_temporal_server_api_topactivity_v1_message_proto protoreflect.FileDescriptor

var file_temporal_server_api_topactivity_v1_message_proto_rawDesc = []byte{
	0x0a, 0x30, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x6f, 0x70, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x22, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x6f, 0x70, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61,
	0x6c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd8, 0x04,
	0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x49, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x73, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x6d, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x75,
	0x6e, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4e, 0x0a, 0x16, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x13, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x6f, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xcb, 0x02, 0x0a, 0x0f, 0x54, 0x6f, 0x70,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x96, 0x01, 0x0a,
	0x24, 0x74, 0x6f, 0x70, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x74, 0x65,
	0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x74, 0x6f, 0x70, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x6f, 0x70, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x48, 0x00, 0x52, 0x20, 0x74, 0x6f, 0x70, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x90, 0x01, 0x0a, 0x22, 0x74, 0x6f, 0x70, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x42, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x6f, 0x70, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x74, 0x72, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x48, 0x00, 0x52, 0x1e, 0x74, 0x6f, 0x70, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x74, 0x72, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x3c, 0x0a, 0x20, 0x54, 0x6f, 0x70, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x74,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x74, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x22, 0x3a, 0x0a, 0x1e, 0x54, 0x6f, 0x70, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x74, 0x72, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x42, 0x36, 0x5a, 0x34, 0x67, 0x6f, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2e,
	0x69, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x6f,
	0x70, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x6f, 0x70,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_temporal_server_api_topactivity_v1_message_proto_rawDescOnce sync.Once
	file_temporal_server_api_topactivity_v1_message_proto_rawDescData = file_temporal_server_api_topactivity_v1_message_proto_rawDesc
)

func file_temporal_server_api_topactivity_v1_message_proto_rawDescGZIP() []byte {
	file_temporal_server_api_topactivity_v1_message_proto_rawDescOnce.Do(func() {
		file_temporal_server_api_topactivity_v1_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_temporal_server_api_topactivity_v1_message_proto_rawDescData)
	})
	return file_temporal_server_api_topactivity_v1_message_proto_rawDescData
}

var file_temporal_server_api_topactivity_v1_message_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_temporal_server_api_topactivity_v1_message_proto_goTypes = []interface{}{
	(*State)(nil),                            // 0: temporal.server.api.topactivity.v1.State
	(*TopActivityTask)(nil),                  // 1: temporal.server.api.topactivity.v1.TopActivityTask
	(*TopActivityTimeoutTaskAttributes)(nil), // 2: temporal.server.api.topactivity.v1.TopActivityTimeoutTaskAttributes
	(*TopActivityRetryTaskAttributes)(nil),   // 3: temporal.server.api.topactivity.v1.TopActivityRetryTaskAttributes
	(*v1.ActivityType)(nil),                  // 4: temporal.api.common.v1.ActivityType
	(*timestamppb.Timestamp)(nil),            // 5: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),              // 6: google.protobuf.Duration
}
var file_temporal_server_api_topactivity_v1_message_proto_depIdxs = []int32{
	4, // 0: temporal.server.api.topactivity.v1.State.activity_type:type_name -> temporal.api.common.v1.ActivityType
	5, // 1: temporal.server.api.topactivity.v1.State.started_time:type_name -> google.protobuf.Timestamp
	5, // 2: temporal.server.api.topactivity.v1.State.scheduled_time:type_name -> google.protobuf.Timestamp
	5, // 3: temporal.server.api.topactivity.v1.State.closed_time:type_name -> google.protobuf.Timestamp
	6, // 4: temporal.server.api.topactivity.v1.State.start_to_close_timeout:type_name -> google.protobuf.Duration
	2, // 5: temporal.server.api.topactivity.v1.TopActivityTask.top_activity_timeout_task_attributes:type_name -> temporal.server.api.topactivity.v1.TopActivityTimeoutTaskAttributes
	3, // 6: temporal.server.api.topactivity.v1.TopActivityTask.top_activity_retry_task_attributes:type_name -> temporal.server.api.topactivity.v1.TopActivityRetryTaskAttributes
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_temporal_server_api_topactivity_v1_message_proto_init() }
func file_temporal_server_api_topactivity_v1_message_proto_init() {
	if File_temporal_server_api_topactivity_v1_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_temporal_server_api_topactivity_v1_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_temporal_server_api_topactivity_v1_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopActivityTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_temporal_server_api_topactivity_v1_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopActivityTimeoutTaskAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_temporal_server_api_topactivity_v1_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopActivityRetryTaskAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_temporal_server_api_topactivity_v1_message_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*TopActivityTask_TopActivityTimeoutTaskAttributes)(nil),
		(*TopActivityTask_TopActivityRetryTaskAttributes)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_temporal_server_api_topactivity_v1_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_temporal_server_api_topactivity_v1_message_proto_goTypes,
		DependencyIndexes: file_temporal_server_api_topactivity_v1_message_proto_depIdxs,
		MessageInfos:      file_temporal_server_api_topactivity_v1_message_proto_msgTypes,
	}.Build()
	File_temporal_server_api_topactivity_v1_message_proto = out.File
	file_temporal_server_api_topactivity_v1_message_proto_rawDesc = nil
	file_temporal_server_api_topactivity_v1_message_proto_goTypes = nil
	file_temporal_server_api_topactivity_v1_message_proto_depIdxs = nil
}
